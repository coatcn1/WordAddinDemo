{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/document.js","webpack://office-addin-taskpane-js/./src/taskpane/json-parser.js","webpack://office-addin-taskpane-js/./src/taskpane/ai-service.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// 处理 Word 文档相关的操作\r\nexport async function getDocumentText() {\r\n  try {\r\n    return await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n      selection.load(\"text\");\r\n      await context.sync();\r\n\r\n      let text = selection.text.trim();\r\n\r\n      // 如果未选择任何文本，则获取全文本\r\n      if (text === \"\") {\r\n        log(\"未选择文本，默认获取全文内容\");\r\n        const body = context.document.body;\r\n        body.load(\"text\");\r\n        await context.sync();\r\n        text = body.text;\r\n      } else {\r\n        log(`获取选定的文本，长度: ${text.length} 字符`);\r\n      }\r\n\r\n      // 获取用户设置的字符数\r\n      const chunkSize = parseInt(localStorage.getItem(\"chunkSize\"), 10) || 800;\r\n      log(`使用的字符数设置为 ${chunkSize}`);\r\n\r\n      // 分割文本\r\n      const textChunks = splitTextIntoChunks(text, chunkSize);\r\n\r\n      log(`文本已分割成 ${textChunks.length} 个片段`);\r\n      return textChunks;\r\n    });\r\n  } catch (error) {\r\n    log(`获取文档内容失败: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// 分割文本为不超过指定长度的片段\r\nfunction splitTextIntoChunks(text, maxChunkSize) {\r\n  const paragraphs = text.split(\"\\n\"); // 按段落分割\r\n  const chunks = [];\r\n  let currentChunk = \"\";\r\n\r\n  for (const paragraph of paragraphs) {\r\n    if ((currentChunk + \"\\n\" + paragraph).length <= maxChunkSize) {\r\n      currentChunk += (currentChunk ? \"\\n\" : \"\") + paragraph;\r\n    } else {\r\n      if (currentChunk) {\r\n        chunks.push(currentChunk);\r\n      }\r\n      if (paragraph.length > maxChunkSize) {\r\n        // 如果单个段落超过了最大长度，进一步拆分\r\n        const subChunks = splitLongParagraph(paragraph, maxChunkSize);\r\n        chunks.push(...subChunks);\r\n        currentChunk = \"\";\r\n      } else {\r\n        currentChunk = paragraph;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (currentChunk) {\r\n    chunks.push(currentChunk);\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// 进一步拆分过长的段落\r\nfunction splitLongParagraph(paragraph, maxChunkSize) {\r\n  const sentences = paragraph.match(/[^.!?]+[.!?]*/g) || [paragraph]; // 按句子分割\r\n  const chunks = [];\r\n  let currentChunk = \"\";\r\n\r\n  for (const sentence of sentences) {\r\n    if ((currentChunk + \" \" + sentence).length <= maxChunkSize) {\r\n      currentChunk += (currentChunk ? \" \" : \"\") + sentence;\r\n    } else {\r\n      if (currentChunk) {\r\n        chunks.push(currentChunk);\r\n      }\r\n      if (sentence.length > maxChunkSize) {\r\n        // 如果单个句子仍然过长，强制拆分\r\n        for (let i = 0; i < sentence.length; i += maxChunkSize) {\r\n          chunks.push(sentence.substring(i, i + maxChunkSize));\r\n        }\r\n        currentChunk = \"\";\r\n      } else {\r\n        currentChunk = sentence;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (currentChunk) {\r\n    chunks.push(currentChunk);\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nexport async function addCommentToText(searchText, comment) {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const body = context.document.body;\r\n      const searchResults = body.search(searchText, {\r\n        matchCase: false,\r\n        matchWholeWord: false,\r\n      });\r\n      context.load(searchResults);\r\n      await context.sync();\r\n\r\n      if (searchResults.items.length > 0) {\r\n        searchResults.items.forEach((range) => {\r\n          range.insertComment(comment);\r\n        });\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (error) {\r\n    log(`添加批注失败: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// 处理分段搜索和批注\r\nexport async function processIssue(issue, body, context) {\r\n  try {\r\n    log(`处理问题: ${JSON.stringify(issue)}`);\r\n\r\n    // 1. 首先尝试完整文本匹配\r\n    let foundAny = false;\r\n    const commentedRanges = new Set();\r\n\r\n    try {\r\n      // 准备搜索文本的变体\r\n      const searchVariants = [\r\n        issue.text, // 原始文本（保持制表符）\r\n        issue.text.replace(/\\t/g, \" \"), // 将制表符替换为单个空格\r\n        issue.text.replace(/\\t/g, \"   \"), // 将制表符替换为三个空格\r\n        issue.text.replace(/[\\t\\s]+/g, \" \"), // 将所有空白字符标准化为单个空格\r\n      ];\r\n\r\n      log(`尝试以下搜索变体:`);\r\n      searchVariants.forEach((variant, index) => {\r\n        log(`变体 ${index + 1}: \"${variant}\"`);\r\n      });\r\n\r\n      // 尝试每个变体\r\n      for (const searchText of searchVariants) {\r\n        const searchResults = body.search(searchText, {\r\n          matchCase: false,\r\n          matchWholeWord: false,\r\n        });\r\n        context.load(searchResults);\r\n        await context.sync();\r\n\r\n        if (searchResults.items.length > 0) {\r\n          log(`找到完整匹配，使用文本: \"${searchText}\"`);\r\n          foundAny = true;\r\n\r\n          // 处理搜索结果\r\n          for (const range of searchResults.items) {\r\n            range.load(\"start\");\r\n            await context.sync();\r\n\r\n            const rangeKey = `${range.start}`;\r\n            if (!commentedRanges.has(rangeKey)) {\r\n              commentedRanges.add(rangeKey);\r\n\r\n              const commentText =\r\n                `错误说明：${issue.comment}\\n` + `扣分：${issue.score} 分\\n` + `违反规则：${issue.rule}`;\r\n\r\n              log(`在位置 ${rangeKey} 添加批注: ${commentText}`);\r\n              range.insertComment(commentText);\r\n            }\r\n          }\r\n          break; // 如果找到匹配，就不再尝试其他变体\r\n        }\r\n      }\r\n\r\n      // 2. 如果完整匹配失败，才尝试分段匹配\r\n      if (!foundAny) {\r\n        log(\"完整匹配失败，尝试分段匹配\");\r\n        const textParts = issue.text\r\n          .split(/[\\t\\s]+/) // 按制表符或空格分割\r\n          .filter(Boolean); // 移除空字符串\r\n\r\n        log(`分段搜索以下部分: ${JSON.stringify(textParts)}`);\r\n\r\n        for (const part of textParts) {\r\n          const searchResults = body.search(part, {\r\n            matchCase: false,\r\n            matchWholeWord: true, // 使用全词匹配以提高准确性\r\n          });\r\n          context.load(searchResults);\r\n          await context.sync();\r\n\r\n          if (searchResults.items.length > 0) {\r\n            log(`找到部分匹配: \"${part}\"`);\r\n            foundAny = true;\r\n\r\n            for (const range of searchResults.items) {\r\n              range.load(\"start\");\r\n              await context.sync();\r\n\r\n              const rangeKey = `${range.start}`;\r\n              if (!commentedRanges.has(rangeKey)) {\r\n                commentedRanges.add(rangeKey);\r\n\r\n                const commentText =\r\n                  `错误说明：${issue.comment}\\n` + `扣分：${issue.score} 分\\n` + `违反规则：${issue.rule}`;\r\n\r\n                log(`在位置 ${rangeKey} 添加批注: ${commentText}`);\r\n                range.insertComment(commentText);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (searchError) {\r\n      log(`搜索过程出错: ${searchError.message}`);\r\n    }\r\n\r\n    await context.sync();\r\n    return foundAny;\r\n  } catch (error) {\r\n    log(`处理问题时出错: ${error.message}`);\r\n    return false;\r\n  }\r\n}\r\n","import { log } from \"./taskpane.js\";\r\n\r\nexport function parseAIResponse(response) {\r\n  log(\"=== 开始解析 AI 响应 ===\");\r\n  try {\r\n    // 如果已经是对象，直接返回\r\n    if (typeof response === \"object\") {\r\n      return response;\r\n    }\r\n\r\n    // 1. 使用正则表达式提取 JSON 内容\r\n    const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\r\n    if (!jsonMatch) {\r\n      throw new Error(\"未找到 JSON 格式的内容\");\r\n    }\r\n    let jsonStr = jsonMatch[0];\r\n    log(\"成功提取 JSON 内容\");\r\n\r\n    // 2. 清理 JSON 字符串\r\n    jsonStr = jsonStr\r\n      .replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, \"\") // 移除控制字符\r\n      .replace(/\\t/g, \" \") // 替换制表符为空格\r\n      .trim(); // 移除首尾空格\r\n\r\n    // 3. 尝试解析 JSON\r\n    let result;\r\n    try {\r\n      result = JSON.parse(jsonStr);\r\n    } catch (parseError) {\r\n      log(\"JSON 解析失败\");\r\n      log(`错误消息: ${parseError.message}`);\r\n      throw parseError;\r\n    }\r\n\r\n    // 4. 验证必要的字段\r\n    if (!result.issues || typeof result.totalScore !== \"number\") {\r\n      throw new Error(\"JSON 内容缺少必要的字段 'issues' 或 'totalScore'\");\r\n    }\r\n\r\n    return result;\r\n  } catch (error) {\r\n    log(\"=== AI 响应解析失败 ===\");\r\n    log(`错误类型: ${error.constructor.name}`);\r\n    log(`错误消息: ${error.message}`);\r\n    log(`AI 响应内容:\\n${response}`);\r\n    throw error;\r\n  }\r\n}\r\n","import { log } from \"./taskpane.js\";\r\nimport { parseAIResponse } from \"./json-parser.js\";\r\n\r\n// AI 服务相关的操作\r\nexport function createAIClient() {\r\n  const apiKey = localStorage.getItem(\"apiKey\"); // 从 localStorage 中获取 API Key\r\n  if (!apiKey) {\r\n    throw new Error(\"API Key 未设置\"); // 如果没有设置 API Key，抛出错误\r\n  }\r\n\r\n  return {\r\n    apiKey: apiKey, // 使用从 localStorage 获取的 API Key\r\n    baseURL: \"https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions\",\r\n  };\r\n}\r\n\r\nexport async function performAICheck(rules, text) {\r\n  log(\"开始 AI 检查\");\r\n  try {\r\n    const client = createAIClient();\r\n\r\n    // log(\"准备发送给AI的文本内容:\\n\" + text); // 添加的日志行\r\n\r\n    log(\"发送 AI 请求\");\r\n    const response = await fetch(client.baseURL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${client.apiKey}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        model: \"qwen-max\",\r\n        messages: [\r\n          {\r\n            role: \"system\",\r\n            content: `你是一个专业的文档审核助手。你的任务是：\r\n1. 仔细检查文档中所有违反规则的内容\r\n2. 使用规则中定义的分数进行扣分\r\n3. 必须返回文档中的原文，不要概括或修改\r\n4.**在返回的结果中，\"text\" 字段应仅包含能够定位问题的简短句子或短语，不要包含过多的上下文。**\r\n5. 必须返回**严格符合要求的 JSON 格式**，不要添加任何额外的文本\r\n6.如果没有发现任何问题，返回 issues 为空的 JSON 对象\r\n7. 保持高度专注，不遗漏任何错误`,\r\n          },\r\n          {\r\n            role: \"user\",\r\n            content: `请严格按照以下要求检查给定的文档片段是否违反规则：\r\n\r\n          - 仔细检查文档中所有违反规则的内容。\r\n          - 使用规则中定义的分数进行扣分。\r\n          - **必须仅返回 JSON 格式的内容，不要添加任何其他文本或说明**。\r\n          - **JSON 内容必须严格符合以下格式，不要包含额外的字符或控制符**。\r\n\r\n          返回格式要求（JSON 格式）：\r\n          \\`\\`\\`json\r\n          {\r\n              \"issues\": [\r\n                  {\r\n                      \"text\": \"文档中的原文，必须完整，不要修改或概括\",\r\n                      \"comment\": \"说明违反了什么规则，错在哪里\",\r\n                      \"score\": 扣分分值（必须使用规则中定义的分数，数字类型）,\r\n                      \"rule\": \"违反的具体规则原文\"\r\n                  }\r\n              ],\r\n              \"totalScore\": 总扣分（所有 issues 的 score 之和，数字类型）\r\n          }\r\n          \\`\\`\\`\r\n\r\n          规则：\r\n          ${rules}\r\n\r\n          文档片段：\r\n          ${text}`,\r\n          },\r\n        ],\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    log(\"收到 AI 响应\");\r\n\r\n    if (!data.choices || !data.choices[0] || !data.choices[0].message) {\r\n      throw new Error(\"AI 响应格式不正确\");\r\n    }\r\n\r\n    const aiResponse = data.choices[0].message.content;\r\n    log(`AI 原始响应:\\n${aiResponse}`);\r\n    return parseAIResponse(aiResponse);\r\n  } catch (error) {\r\n    log(`AI 调用错误: ${error.message}`);\r\n    if (retryCount < 2) {\r\n      // 最多重试 2 次\r\n      log(`重试第 ${retryCount + 1} 次`);\r\n      await new Promise((resolve) => setTimeout(resolve, 2000)); // 等待 2 秒\r\n      return await performAICheck(rules, text, retryCount + 1);\r\n    } else {\r\n      throw new Error(`AI 检查失败: ${error.message}`);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global document, Office, Word */\r\n\r\nimport { getDocumentText, addCommentToText, processIssue } from \"./document.js\";\r\nimport { performAICheck } from \"./ai-service.js\";\r\nimport { parseAIResponse } from \"./json-parser.js\";\r\n\r\n// 确保在全局范围内立即输出一条日志\r\nwindow.onload = function () {\r\n  const debugArea = document.getElementById(\"debug-textarea\");\r\n  if (debugArea) {\r\n    debugArea.value = \"[初始化] 页面加载完成\\n\";\r\n  }\r\n};\r\n\r\n// 改进的日志函数\r\nexport function log(message) {\r\n  const now = new Date().toLocaleTimeString();\r\n  const debugArea = document.getElementById(\"debug-textarea\");\r\n  if (debugArea) {\r\n    debugArea.value += `[${now}] ${message}\\n`;\r\n    debugArea.scrollTop = debugArea.scrollHeight;\r\n  }\r\n  console.log(`[${now}] ${message}`);\r\n}\r\n\r\n// 设置按钮状态\r\nfunction setCheckButtonState(enabled) {\r\n  const button = document.getElementById(\"check-button\");\r\n  if (button) {\r\n    button.disabled = !enabled;\r\n  }\r\n}\r\n\r\n// 加载规则文件\r\nfunction loadRulesFile() {\r\n  log(\"载入规则按钮被点击\");\r\n\r\n  // 使用已存在的文件输入元素\r\n  const fileInput = document.getElementById(\"file-input\");\r\n  if (!fileInput) {\r\n    log(\"错误：找不到文件输入元素\");\r\n    return;\r\n  }\r\n\r\n  // 清除之前的值，确保同一文件可以重复选择\r\n  fileInput.value = \"\";\r\n\r\n  // 添加事件监听器（如果已存在则先移除）\r\n  fileInput.removeEventListener(\"change\", handleFileSelect);\r\n  fileInput.addEventListener(\"change\", handleFileSelect);\r\n\r\n  // 触发文件选择对话框\r\n  log(\"触发文件选择对话框\");\r\n  fileInput.click();\r\n}\r\n\r\n// 文件读取函数 - 确保在 handleFileSelect 之前定义\r\nfunction readFileContent(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      log(\"文件读取完成\");\r\n      resolve(e.target.result);\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      log(\"文件读取失败\");\r\n      reject(new Error(\"文件读取失败\"));\r\n    };\r\n\r\n    reader.readAsText(file, \"UTF-8\");\r\n  });\r\n}\r\n\r\n// 文件选择处理函数\r\nasync function handleFileSelect(event) {\r\n  log(\"文件选择事件触发\");\r\n  const file = event.target.files[0];\r\n  if (!file) {\r\n    log(\"未选择文件\");\r\n    return;\r\n  }\r\n\r\n  log(`选择的文件: ${file.name}, 大小: ${file.size} 字节`);\r\n  log(\"开始读取文件\");\r\n\r\n  try {\r\n    const content = await readFileContent(file);\r\n    const rulesInput = document.getElementById(\"rules-input\");\r\n    if (rulesInput) {\r\n      log(\"正在设置输入框内容\");\r\n      rulesInput.value = content;\r\n      log(`内容设置完成，当前长度: ${rulesInput.value.length} 字符`);\r\n      log(`内容预览: ${content.substring(0, 100)}`);\r\n    } else {\r\n      throw new Error(\"找不到规则输入框\");\r\n    }\r\n  } catch (error) {\r\n    log(`文件处理错误: ${error.message}`);\r\n    const statusDiv = document.getElementById(\"status\");\r\n    if (statusDiv) {\r\n      statusDiv.textContent = `文件处理错误：${error.message}`;\r\n    }\r\n  }\r\n}\r\n\r\n// 检查文档\r\nasync function checkDocument() {\r\n  const statusDiv = document.getElementById(\"status\");\r\n  const debugArea = document.getElementById(\"debug-textarea\");\r\n\r\n  try {\r\n    // 清空状态信息和日志\r\n    statusDiv.textContent = \"\";\r\n    if (debugArea) {\r\n      debugArea.value = \"\"; // 清空日志\r\n      log(\"=== 开始新的检查 ===\"); // 添加新检查的开始标记\r\n    }\r\n\r\n    // 禁用按钮并显示加载状态\r\n    setCheckButtonState(false);\r\n\r\n    // 获取规则\r\n    const rules = document.getElementById(\"rules-input\").value;\r\n    if (!rules) {\r\n      throw new Error(\"请先载入评分规则\");\r\n    }\r\n\r\n    // 获取文本片段数组\r\n    const textChunks = await getDocumentText();\r\n    if (!textChunks || textChunks.length === 0) {\r\n      throw new Error(\"文档内容为空\");\r\n    }\r\n\r\n    // 删除现有的批注\r\n    await Word.run(async (context) => {\r\n      try {\r\n        const comments = context.document.comments;\r\n\r\n        if (!comments) {\r\n          log(\"无法获取批注集合\");\r\n          return;\r\n        }\r\n\r\n        // 明确加载 'items' 属性\r\n        comments.load(\"items\");\r\n        await context.sync();\r\n\r\n        if (comments.items && comments.items.length > 0) {\r\n          comments.items.forEach((comment) => {\r\n            comment.delete();\r\n          });\r\n          await context.sync();\r\n          log(`已删除 ${comments.items.length} 条现有批注`);\r\n        } else {\r\n          log(\"文档中没有现有的批注\");\r\n        }\r\n      } catch (error) {\r\n        log(`删除批注时出错: ${error.message}`);\r\n        throw error; // 将错误抛出以便外层捕获\r\n      }\r\n    });\r\n\r\n    log(`总共有 ${textChunks.length} 个文本片段需要检查`);\r\n\r\n    let allIssues = [];\r\n    let totalScore = 0;\r\n    const issueSet = new Set(); // 用于去重\r\n\r\n    // 对每个片段进行检查\r\n    for (let i = 0; i < textChunks.length; i++) {\r\n      const text = textChunks[i];\r\n      log(`开始检查第 ${i + 1}/${textChunks.length} 个片段，长度: ${text.length} 字符`);\r\n\r\n      // 执行 AI 检查，确保等待结果返回后再进行下一次请求\r\n      const result = await performAICheck(rules, text);\r\n\r\n      // 合并结果\r\n      if (result && result.issues) {\r\n        for (const issue of result.issues) {\r\n          const issueKey = issue.text + issue.comment; // 根据需要定义唯一键\r\n          if (!issueSet.has(issueKey)) {\r\n            issueSet.add(issueKey);\r\n            allIssues.push(issue);\r\n            totalScore += issue.score || 0;\r\n          }\r\n        }\r\n      }\r\n\r\n      // 为了避免过快的请求，可以考虑添加一些延迟\r\n      await new Promise((resolve) => setTimeout(resolve, 2000)); // 延迟 2000 毫秒\r\n    }\r\n\r\n    // 处理结果\r\n    await Word.run(async (context) => {\r\n      const body = context.document.body;\r\n      let addedComments = 0;\r\n\r\n      for (const issue of allIssues) {\r\n        const found = await processIssue(issue, body, context);\r\n        if (found) addedComments++;\r\n      }\r\n\r\n      const resultMsg = `检查完成，发现 ${addedComments} 处错误，总扣分：${totalScore} 分`;\r\n      log(resultMsg);\r\n      statusDiv.textContent = resultMsg;\r\n    });\r\n  } catch (error) {\r\n    const errorMsg = `检查过程出现错误：${error.message}`;\r\n    log(errorMsg);\r\n    statusDiv.textContent = errorMsg;\r\n  } finally {\r\n    // 恢复按钮状态\r\n    setCheckButtonState(true);\r\n    // 保存日志到文件\r\n    saveLogToFile();\r\n  }\r\n}\r\n\r\n// 保存日志到文件的函数\r\nfunction saveLogToFile() {\r\n  const debugArea = document.getElementById(\"debug-textarea\");\r\n  if (debugArea) {\r\n    const logContent = debugArea.value;\r\n\r\n    // 创建 Blob 对象\r\n    const blob = new Blob([logContent], { type: \"text/plain;charset=utf-8\" });\r\n\r\n    // 生成文件名，包含时间戳\r\n    const now = new Date();\r\n    const timestamp =\r\n      now.getFullYear() +\r\n      \"-\" +\r\n      (\"0\" + (now.getMonth() + 1)).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + now.getDate()).slice(-2) +\r\n      \"_\" +\r\n      (\"0\" + now.getHours()).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + now.getMinutes()).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + now.getSeconds()).slice(-2);\r\n    const filename = `log_${timestamp}.txt`;\r\n\r\n    // 创建下载链接并触发下载\r\n    const link = document.createElement(\"a\");\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.download = filename;\r\n\r\n    // 将链接添加到文档并触发点击\r\n    document.body.appendChild(link);\r\n    link.click();\r\n\r\n    // 移除链接\r\n    document.body.removeChild(link);\r\n  }\r\n}\r\n\r\n// 修改调试信息显示控制\r\nfunction initializeDebugControl() {\r\n  const debugCheckbox = document.getElementById(\"show-debug\");\r\n  const debugContainer = document.getElementById(\"debug-container\");\r\n\r\n  if (debugCheckbox && debugContainer) {\r\n    // 检查是否有保存的状态\r\n    const savedState = localStorage.getItem(\"showDebug\");\r\n    if (savedState === \"true\") {\r\n      debugCheckbox.checked = true;\r\n      debugContainer.style.display = \"block\";\r\n    }\r\n\r\n    debugCheckbox.addEventListener(\"change\", function (event) {\r\n      debugContainer.style.display = event.target.checked ? \"block\" : \"none\";\r\n      // 保存状态\r\n      localStorage.setItem(\"showDebug\", event.target.checked);\r\n    });\r\n  }\r\n}\r\n\r\n// 在初始化时添加调试控制\r\nOffice.onReady(function (info) {\r\n  if (info.host === Office.HostType.Word) {\r\n    // 初始化调试控制\r\n    initializeDebugControl();\r\n\r\n    // 绑定所有按钮事件\r\n    const loadButton = document.getElementById(\"load-rules\");\r\n    if (loadButton) {\r\n      loadButton.onclick = loadRulesFile;\r\n    }\r\n\r\n    const checkButton = document.getElementById(\"check-button\");\r\n    if (checkButton) {\r\n      checkButton.onclick = checkDocument;\r\n    }\r\n\r\n    const settingsButton = document.getElementById(\"settings-button\");\r\n    if (settingsButton) {\r\n      settingsButton.onclick = function () {\r\n        const panel = document.getElementById(\"settings-panel\");\r\n        const apiKeyInput = document.getElementById(\"apikey\");\r\n        // const rangeStartInput = document.getElementById(\"range-start\");\r\n        // const rangeEndInput = document.getElementById(\"range-end\");\r\n        const chunkSizeInput = document.getElementById(\"chunk-size\"); // 新增\r\n\r\n        // 显示面板时加载已保存的值\r\n        const savedApiKey = localStorage.getItem(\"apiKey\");\r\n        // const savedRangeStart = localStorage.getItem(\"rangeStart\") || \"1\";\r\n        // const savedRangeEnd = localStorage.getItem(\"rangeEnd\") || \"100\";\r\n\r\n        if (savedApiKey) {\r\n          apiKeyInput.value = savedApiKey;\r\n        }\r\n        // rangeStartInput.value = savedRangeStart;\r\n        // rangeEndInput.value = savedRangeEnd;\r\n        const savedChunkSize = localStorage.getItem(\"chunkSize\") || \"800\"; // 新增\r\n        chunkSizeInput.value = savedChunkSize; // 新增\r\n\r\n        panel.style.display = \"block\";\r\n      };\r\n    }\r\n\r\n    // 添加取消按钮事件\r\n    document.getElementById(\"cancel-settings\").onclick = function () {\r\n      document.getElementById(\"settings-panel\").style.display = \"none\";\r\n    };\r\n\r\n    // 添加保存按钮事件\r\n    document.getElementById(\"save-settings\").onclick = function () {\r\n      const apiKey = document.getElementById(\"apikey\").value.trim();\r\n      // const rangeStart = document.getElementById(\"range-start\").value;\r\n      // const rangeEnd = document.getElementById(\"range-end\").value;\r\n      const chunkSize = document.getElementById(\"chunk-size\").value; // 新增\r\n\r\n      if (apiKey) {\r\n        localStorage.setItem(\"apiKey\", apiKey);\r\n        // localStorage.setItem(\"rangeStart\", rangeStart);\r\n        // localStorage.setItem(\"rangeEnd\", rangeEnd);\r\n        // 验证 chunkSize 的有效性\r\n        const chunkSizeNum = parseInt(chunkSize, 10);\r\n        if (isNaN(chunkSizeNum) || chunkSizeNum < 800 || chunkSizeNum > 2000) {\r\n          alert(\"字符数必须在 800 到 2000 之间\");\r\n          return;\r\n        }\r\n        localStorage.setItem(\"chunkSize\", chunkSizeNum); // 新增\r\n\r\n        document.getElementById(\"settings-panel\").style.display = \"none\";\r\n\r\n        // 显示保存成功消息\r\n        const statusDiv = document.getElementById(\"status\");\r\n        if (statusDiv) {\r\n          statusDiv.textContent = \"设置已保存\";\r\n          setTimeout(() => {\r\n            statusDiv.textContent = \"\";\r\n          }, 3000);\r\n        }\r\n      }\r\n    };\r\n\r\n    log(\"=== Word 加载项初始化完成 ===\");\r\n  }\r\n});\r\n\r\n// 导出全局函数供其他模块使用\r\nwindow.log = log;\r\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!doctype html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>文档规范性检查</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <div id=\\\"content-main\\\"> <div class=\\\"padding\\\"> <div class=\\\"section\\\" style=\\\"margin:10px;display:flex;flex-direction:column;height:100%\\\"> <div style=\\\"flex-grow:1;display:flex;flex-direction:column\\\"> <div style=\\\"margin-bottom:10px;display:flex;align-items:center;gap:10px\\\"> <input type=\\\"file\\\" id=\\\"file-input\\\" accept=\\\".txt\\\" style=\\\"display:none\\\"/> <button id=\\\"load-rules\\\" class=\\\"ms-Button\\\" style=\\\"flex:0 0 calc(100% - 42px)\\\"> <span class=\\\"ms-Button-label\\\">载入规则</span> </button> <button id=\\\"settings-button\\\" class=\\\"ms-Button\\\" style=\\\"width:32px;min-width:32px;padding:0;height:32px\\\"> <span class=\\\"ms-Button-label\\\"> <i class=\\\"fas fa-cog\\\"></i> </span> </button> </div> <textarea id=\\\"rules-input\\\" class=\\\"rules-textarea\\\" placeholder='在此处粘贴规则或点击\\\"载入规则\\\"按钮加载规则文件' spellcheck=\\\"false\\\" style=\\\"width:100%;min-height:200px;margin:10px 0;padding:8px;border:1px solid #ccc;border-radius:4px;resize:vertical\\\"></textarea> <p style=\\\"font-size:12px;color:#666;margin-top:5px\\\"> 提示：您可以在文档中选择要检查的内容，如果未选择，则默认检查全文。 </p> <div id=\\\"status\\\" class=\\\"status-message\\\" style=\\\"margin-bottom:10px;min-height:20px\\\"></div> </div> <div style=\\\"border-top:1px solid #e0e0e0;padding-top:10px\\\"> <div class=\\\"button-row\\\"> <button id=\\\"check-button\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"button-content\\\"> <span class=\\\"button-text\\\">开始检查</span> <span class=\\\"loading-dots\\\"></span> </span> </button> <label class=\\\"debug-checkbox\\\"> <input type=\\\"checkbox\\\" id=\\\"show-debug\\\" style=\\\"margin:0\\\"/> <span>显示调试信息</span> </label> </div> <div id=\\\"debug-container\\\" style=\\\"display:none;margin-top:10px\\\"> <textarea id=\\\"debug-textarea\\\" style=\\\"width:100%;height:200px;padding:8px;font-family:monospace;font-size:12px;line-height:1.4;border:1px solid #ccc;border-radius:4px;background-color:#f5f5f5;resize:vertical\\\" readonly=\\\"readonly\\\"></textarea> </div> </div> </div> </div> </div> <div id=\\\"settings-panel\\\" style=\\\"display:none;position:absolute;top:50px;left:10px;right:10px;background:#fff;border:1px solid #ccc;padding:15px;box-shadow:0 2px 4px rgba(0,0,0,.2);border-radius:4px\\\"> <div style=\\\"margin-bottom:15px\\\"> <label for=\\\"apikey\\\" style=\\\"display:block;margin-bottom:5px\\\">API Key:</label> <input type=\\\"text\\\" id=\\\"apikey\\\" style=\\\"width:100%;padding:5px;border:1px solid #ccc;border-radius:4px\\\"/> </div> <div style=\\\"margin-bottom:15px\\\"> <label for=\\\"chunk-size\\\" style=\\\"display:block;margin-bottom:5px\\\">每个片段的字符数（200-2000）:</label> <input type=\\\"number\\\" id=\\\"chunk-size\\\" min=\\\"200\\\" max=\\\"2000\\\" value=\\\"800\\\" style=\\\"width:100%;padding:5px;border:1px solid #ccc;border-radius:4px\\\"/> </div> <div style=\\\"display:flex;justify-content:flex-end;gap:10px\\\"> <button id=\\\"cancel-settings\\\" class=\\\"ms-Button\\\"> <span class=\\\"ms-Button-label\\\">取消</span> </button> <button id=\\\"save-settings\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">保存</span> </button> </div> </div> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","getDocumentText","_getDocumentText","_callee2","_context2","Word","run","_ref","_callee","context","selection","text","body","chunkSize","textChunks","_context","getSelection","load","sync","trim","log","concat","parseInt","localStorage","getItem","splitTextIntoChunks","_x6","t0","message","maxChunkSize","_step","chunks","currentChunk","_iterator","split","paragraph","subChunks","splitLongParagraph","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","err","_step2","_iterator2","match","sentence","substring","processIssue","_x3","_x4","_x5","_processIssue","_callee5","issue","foundAny","commentedRanges","searchVariants","_i","_searchVariants","searchText","searchResults","_iterator3","_step3","range","rangeKey","commentText","textParts","_iterator4","_step4","part","_searchResults","_iterator5","_step5","_range","_rangeKey","_commentText","_context5","JSON","stringify","Set","variant","index","search","matchCase","matchWholeWord","items","start","has","add","comment","score","rule","insertComment","filter","Boolean","t1","t2","t3","t4","parseAIResponse","response","jsonMatch","result","jsonStr","parse","parseError","issues","totalScore","error","createAIClient","apiKey","baseURL","performAICheck","_x","_x2","_performAICheck","rules","client","errorText","data","aiResponse","fetch","headers","Authorization","model","messages","role","content","ok","status","json","choices","retryCount","setTimeout","now","Date","toLocaleTimeString","debugArea","getElementById","scrollTop","scrollHeight","console","setCheckButtonState","enabled","button","disabled","loadRulesFile","fileInput","removeEventListener","handleFileSelect","addEventListener","click","readFileContent","file","reject","reader","FileReader","onload","target","onerror","readAsText","_handleFileSelect","event","rulesInput","statusDiv","files","size","textContent","checkDocument","_checkDocument","_callee4","allIssues","issueSet","issueKey","errorMsg","_context4","comments","delete","_ref2","_callee3","addedComments","_allIssues","_issue","resultMsg","_context3","saveLogToFile","logContent","blob","Blob","timestamp","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","filename","link","createElement","URL","createObjectURL","download","appendChild","removeChild","Office","onReady","info","host","HostType","debugCheckbox","debugContainer","checked","style","display","setItem","loadButton","onclick","checkButton","settingsButton","panel","apiKeyInput","chunkSizeInput","savedApiKey","savedChunkSize","chunkSizeNum","alert"],"sourceRoot":""}